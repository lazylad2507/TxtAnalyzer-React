{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","border","borderColor","react_default","a","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","concat","dist","to","aria-label","htmlFor","onClick","toggleMode","defaultProps","title","aboutText","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","substr","split","filter","n","Alert","word","height","alert","role","charAt","slice","App","setmode","_useState3","_useState4","setalert","message","setTimeout","document","body","react_router_dist","path","element","components_About","components_TextForm","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0a325c8e.chunk.js","sourcesContent":["import React from 'react';\r\n// import { useState } from 'react';\r\n\r\nconst About = (props) => {\r\n\r\n    // const [myStyle, setMyStyle] = useState({\r\n    //     color: 'black',\r\n    //     backgroundColor: 'white'\r\n    // })\r\n    let myStyle = {\r\n        color: props.mode === 'dark' ? 'white' : '#0d183d',\r\n        backgroundColor: props.mode === 'dark' ? '#28335a' : 'white',\r\n        border: props.mode === 'dark' ? 'white' : '#0d183d',\r\n        borderColor: props.mode === 'dark' ? 'white' : '#0d183d'\r\n\r\n    }\r\n    // #28335a\r\n\r\n    return (\r\n        <div className='container p-3 mt-3' >\r\n            <h1 className=\"my-2\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            Analyze Your Text\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <strong> TxtAnalyzer gives you a way to analyze your text quickly and efficiently. Their is in built feature of word and character counter</strong>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            Free To Use\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <strong>TxtAnalyzer is a free character counter tool that providesinstant character count and word count statistics for a giventext. TxtAnalyzer reports the number of words and characters. Thus it is suitable for writing text with word/ character limit.</strong>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            Browser Compatible\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <strong>This word counter softwware works in any web browser such as Chrome, Firefox, MS Edge, Safari, Opera etc. It suits the count chracters in facebook, blog, books, excel document, pdf document, essays etc.</strong>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">TxtAnalyzer</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse justify-content-between\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" to=\"/\" > Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"form-check form-switch\">\r\n                        <label className={`form-check-label text-${props.mode === 'light' ? 'dark' : 'light'}`} htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav >\r\n    )\r\n}\r\n\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n    aboutText: 'About'\r\n}","import React from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst TextForm = (props) => {\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"onchange\");\r\n        setText(event.target.value)\r\n\r\n    }\r\n    const [text, setText] = useState('');\r\n    // const TextForm = () => {\r\n    const handleUpClick = () => {\r\n        // console.log(\"uppercase was clicked: \" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n    const handleLoClick = () => {\r\n        // console.log(\"uppercase was clicked: \" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n    const handleClearClick = () => {\r\n        // console.log(\"uppercase was clicked: \" + text);\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n    }\r\n    const handleSpeech = () => {\r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.text = text;\r\n        window.speechSynthesis.speak(msg);\r\n        props.showAlert(\"You can listen to the message now!\", \"success\");\r\n    }\r\n    const handleUndoClick = () => {\r\n        let newText = text.substr(0, text.length - 1);\r\n        setText(newText)\r\n        props.showAlert(\"You can undo the message!\", \"success\");\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='container' style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h1 className='mb-4'>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? '#28335a' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary m-2\" disabled={text.length === 0} onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary m-2\" disabled={text.length === 0} onClick={handleLoClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary m-2\" disabled={text.length === 0} onClick={handleClearClick}>Clear Text</button>\r\n                <button className=\"btn btn-primary m-2\" disabled={text.length === 0} onClick={handleSpeech}>Listen to Text</button>\r\n                <button className=\"btn btn-primary m-2\" disabled={text.length === 0} onClick={handleUndoClick}>Undo Text</button>\r\n\r\n            </div>\r\n            <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h2>Your text here</h2>\r\n                <strong>\r\n                    {/* <p className='mb-0'>{text.split(\" \").length} words and {text.length} characters</p> */}\r\n                    <p className='mb-0'>{text.split(/\\n+/).filter(function (n) { return n !== '' }).length} words and {text.length} characters</p>\r\n                </strong>\r\n                <strong>\r\n                    <p>{0.008 * text.split(\" \").filter(function (n) { return n !== '' }).length} minutes read</p>\r\n                </strong>\r\n                <h2>Preview</h2>\r\n                <p>{text.length > 0 ? text : \"Enter something in textbox above to preview it here\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default TextForm;","import React from 'react';\r\n\r\nexport default function Alert(props) {\r\n    // const capitalize = (word) => {\r\n    //     const lower = word.toLowerCase();\r\n    //     const lower = toUpperCase(0) + lower.slice(1);\r\n    // }\r\n\r\n    const capitalize = (word) => {\r\n        return word.charAt(0).toUpperCase() + word.slice(1);\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: '3.125rem' }}>\r\n            {\r\n                props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                    <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n                </div>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#0d183d';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // document.title = \"TxtAnalyzer - Dark Mode\";\n      // setInterval(() => {\n      //   document.title = \"TxtAnalyzer is Amazing mode\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install TxtAnalyzer Now!\";\n      // }, 1500);\n    }\n    else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      // document.title = \"TxtAnalyzer - Light Mode\";\n    }\n  }\n\n  const [alert, setalert] = useState(null);\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  }\n\n  return (\n    <>\n      <BrowserRouter>\n        <Navbar title=\"TxtAnalyzer\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Routes>\n            <Route path=\"/about\" element={<About mode={mode} />} />\n            <Route path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Try TxtAnalyzer - Word counter | Character counter | Lowercase to uppercase\" mode={mode} />} />\n          </Routes>\n        </div>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}