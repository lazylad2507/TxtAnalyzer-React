{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","htmlFor","onClick","toggleMode","defaultProps","title","aboutText","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","substr","split","filter","element","Alert","word","height","alert","role","charAt","slice","App","setmode","_useState3","_useState4","setalert","message","setTimeout","document","body","components_TextForm","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"mMAOe,SAASA,EAAOC,GAC3B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kCAAAC,OAAoCL,EAAMM,KAAI,QAAAD,OAAOL,EAAMM,OACrEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeG,KAAK,KAAG,eACpCN,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBI,KAAK,SAASC,iBAAe,WAAWC,iBAAe,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBAC9JZ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAEpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mDAAmDU,GAAG,aACjEb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeG,KAAK,KAAG,WAM5CN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAS,yBAAAC,OAA0C,UAAfL,EAAMM,KAAmB,OAAS,SAAWS,QAAQ,0BAAwB,oBACxHd,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBY,QAAShB,EAAMiB,WAAYT,KAAK,WAAWM,GAAG,+BAc1Gf,EAAOmB,aAAe,CAClBC,MAAO,iBACPC,UAAW,SCvCf,IAyEeC,EAzEE,SAACrB,GACd,IAICsB,EACuBC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA7BK,EAAIH,EAAA,GAAEI,EAAOJ,EAAA,GAiCpB,OACIvB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2B,SAAA,KACI5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY0B,MAAO,CAAEC,MAAsB,SAAf/B,EAAMM,KAAkB,QAAU,UACzEL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQJ,EAAMgC,SAC5B/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAe6B,MAAON,EAAMO,SA3CzC,SAACC,GAEpBP,EAAQO,EAAMC,OAAOH,QAyCiEH,MAAO,CAAEO,gBAAgC,SAAfrC,EAAMM,KAAkB,UAAY,QAASyB,MAAsB,SAAf/B,EAAMM,KAAkB,QAAU,SAAWQ,GAAG,QAAQwB,KAAK,OAEzNrC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAAsBmC,SAA0B,IAAhBZ,EAAKa,OAAcxB,QAtC3D,WAElB,IAAIyB,EAAUd,EAAKe,cACnBd,EAAQa,GACRzC,EAAM2C,UAAU,0BAA2B,aAkCyD,wBAC5F1C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAAsBmC,SAA0B,IAAhBZ,EAAKa,OAAcxB,QAjC3D,WAElB,IAAIyB,EAAUd,EAAKiB,cACnBhB,EAAQa,GACRzC,EAAM2C,UAAU,0BAA2B,aA6ByD,wBAC5F1C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAAsBmC,SAA0B,IAAhBZ,EAAKa,OAAcxB,QA5BxD,WAGrBY,EADc,IAEd5B,EAAM2C,UAAU,gBAAiB,aAwBsE,cAC/F1C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAAsBmC,SAA0B,IAAhBZ,EAAKa,OAAcxB,QAvB5D,WACjB,IAAI6B,EAAM,IAAIC,yBACdD,EAAIlB,KAAOA,EACXoB,OAAOC,gBAAgBC,MAAMJ,GAC7B7C,EAAM2C,UAAU,qCAAsC,aAmB6C,kBAC3F1C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAAsBmC,SAA0B,IAAhBZ,EAAKa,OAAcxB,QAlBzD,WACpB,IAAIyB,EAAUd,EAAKuB,OAAO,EAAGvB,EAAKa,OAAS,GAC3CZ,EAAQa,GACRzC,EAAM2C,UAAU,4BAA6B,aAeyD,cAGlG1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB0B,MAAO,CAAEC,MAAsB,SAAf/B,EAAMM,KAAkB,QAAU,UAC9EL,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,cAGIF,EAAAC,EAAAC,cAAA,SAAIwB,EAAKwB,MAAM,OAAOC,OAAO,SAACC,GAAc,OAA0B,IAAnBA,EAAQb,SAAgBA,OAAM,cAAab,EAAKa,OAAM,gBAE7GvC,EAAAC,EAAAC,cAAA,cAEIF,EAAAC,EAAAC,cAAA,SAAI,KAAQwB,EAAKwB,MAAM,OAAOC,OAAO,SAACC,GAAc,OAA0B,IAAnBA,EAAQb,SAAgBA,OAAM,kBAE7FvC,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAIwB,EAAKa,OAAS,EAAIb,EAAO,0DClE9B,SAAS2B,EAAMtD,GAM1B,IAAoBuD,EAIpB,OACItD,EAAAC,EAAAC,cAAA,OAAK2B,MAAO,CAAE0B,OAAQ,aAEdxD,EAAMyD,OAASxD,EAAAC,EAAAC,cAAA,OAAKC,UAAS,eAAAC,OAAiBL,EAAMyD,MAAMjD,KAAI,gCAAgCkD,KAAK,SAC/FzD,EAAAC,EAAAC,cAAA,eARIoD,EAQgBvD,EAAMyD,MAAMjD,MAPhCmD,OAAO,GAAGjB,cAAgBa,EAAKK,MAAM,IAOU,KAAG5D,EAAMyD,MAAMZ,MCkDnEgB,MAzDf,WAAe,IAAAvC,EACWC,mBAAS,SAAQC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAlChB,EAAIkB,EAAA,GAAEsC,EAAOtC,EAAA,GAqBnBuC,EAEyBxC,mBAAS,MAAKyC,EAAAvC,OAAAC,EAAA,EAAAD,CAAAsC,EAAA,GAAjCN,EAAKO,EAAA,GAAEC,EAAQD,EAAA,GAChBrB,EAAY,SAACuB,EAAS1D,GAC1ByD,EAAS,CACPpB,IAAKqB,EACL1D,KAAMA,IAER2D,WAAW,WACTF,EAAS,OACR,OAGL,OACEhE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2B,SAAA,KAYE5B,EAAAC,EAAAC,cAACJ,EAAM,CAACoB,MAAM,cAAcb,KAAMA,EAAMW,WA7CzB,WACJ,UAATX,GACFwD,EAAQ,QACRM,SAASC,KAAKvC,MAAMO,gBAAkB,UACtCM,EAAU,6BAA8B,aAUxCmB,EAAQ,SACRM,SAASC,KAAKvC,MAAMO,gBAAkB,QACtCM,EAAU,8BAA+B,eA8BzC1C,EAAAC,EAAAC,cAACmD,EAAK,CAACG,MAAOA,IACdxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACmE,EAAQ,CAAC3B,UAAWA,EAAWX,QAAQ,8EAA8E1B,KAAMA,OChDrHiE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWjB,SAASkB,eAAe,SACpDC,OACHtF,EAAAC,EAAAC,cAACF,EAAAC,EAAMsF,WAAU,KACfvF,EAAAC,EAAAC,cAACsF,EAAG,QAORlB","file":"static/js/main.4586a342.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\">TxtAnalyzer</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse justify-content-between\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-a active\" href=\"/\" > Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <a className=\"nav-a\" href=\"/about\">About</a>\r\n                        </li> */}\r\n                    </ul>\r\n                    <div className=\"form-check form-switch\">\r\n                        <label className={`form-check-label text-${props.mode === 'light' ? 'dark' : 'light'}`} htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav >\r\n    )\r\n}\r\n\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n    aboutText: 'About'\r\n}","import React from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst TextForm = (props) => {\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"onchange\");\r\n        setText(event.target.value)\r\n\r\n    }\r\n    const [text, setText] = useState('');\r\n    // const TextForm = () => {\r\n    const handleUpClick = () => {\r\n        // console.log(\"uppercase was clicked: \" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n    const handleLoClick = () => {\r\n        // console.log(\"uppercase was clicked: \" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n    const handleClearClick = () => {\r\n        // console.log(\"uppercase was clicked: \" + text);\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n    }\r\n    const handleSpeech = () => {\r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.text = text;\r\n        window.speechSynthesis.speak(msg);\r\n        props.showAlert(\"You can listen to the message now!\", \"success\");\r\n    }\r\n    const handleUndoClick = () => {\r\n        let newText = text.substr(0, text.length - 1);\r\n        setText(newText)\r\n        props.showAlert(\"You can undo the message!\", \"success\");\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='container' style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h1 className='mb-4'>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? '#28335a' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary m-2\" disabled={text.length === 0} onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary m-2\" disabled={text.length === 0} onClick={handleLoClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary m-2\" disabled={text.length === 0} onClick={handleClearClick}>Clear Text</button>\r\n                <button className=\"btn btn-primary m-2\" disabled={text.length === 0} onClick={handleSpeech}>Listen to Text</button>\r\n                <button className=\"btn btn-primary m-2\" disabled={text.length === 0} onClick={handleUndoClick}>Undo Text</button>\r\n\r\n            </div>\r\n            <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h2>Your text here</h2>\r\n                <strong>\r\n                    {/* <p className='mb-0'>{text.split(\" \").length} words and {text.length} characters</p> */}\r\n                    {/* <p className='mb-0'>{text.split(/\\n+/).filter(function (n) { return n !== '' }).length} words and {text.length} characters</p> */}\r\n                    <p>{text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} words and {text.length} characters</p>\r\n                </strong>\r\n                <strong>\r\n                    {/* <p>{0.008 * text.split(\" \").filter(function (n) { return n !== '' }).length} minutes read</p> */}\r\n                    <p>{0.008 * text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} Minutes read</p>\r\n                </strong>\r\n                <h2>Preview</h2>\r\n                <p>{text.length > 0 ? text : \"Enter something in textbox above to preview it here\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default TextForm;","import React from 'react';\r\n\r\nexport default function Alert(props) {\r\n    // const capitalize = (word) => {\r\n    //     const lower = word.toLowerCase();\r\n    //     const lower = toUpperCase(0) + lower.slice(1);\r\n    // }\r\n\r\n    const capitalize = (word) => {\r\n        return word.charAt(0).toUpperCase() + word.slice(1);\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: '3.125rem' }}>\r\n            {\r\n                props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                    <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n                </div>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#0d183d';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // document.title = \"TxtAnalyzer - Dark Mode\";\n      // setInterval(() => {\n      //   document.title = \"TxtAnalyzer is Amazing mode\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install TxtAnalyzer Now!\";\n      // }, 1500);\n    }\n    else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      // document.title = \"TxtAnalyzer - Light Mode\";\n    }\n  }\n\n  const [alert, setalert] = useState(null);\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  }\n\n  return (\n    <>\n      {/* <BrowserRouter>\n        <Navbar title=\"TxtAnalyzer\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n        <Routes>\n        <Route path=\"/about\" element={<About mode={mode} />} />\n        <Route path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Try TxtAnalyzer - Word counter | Character counter | Lowercase to uppercase\" mode={mode} />} />\n        </Routes>\n        </div>\n      </BrowserRouter> */}\n\n      <Navbar title=\"TxtAnalyzer\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <TextForm showAlert={showAlert} heading=\"Try TxtAnalyzer - Word counter | Character counter | Lowercase to uppercase\" mode={mode} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}