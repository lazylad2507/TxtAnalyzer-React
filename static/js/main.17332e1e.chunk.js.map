{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","htmlFor","onClick","toggleMode","defaultProps","title","aboutText","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","substr","length","split","filter","n","Alert","word","alert","role","charAt","slice","App","setmode","_useState3","_useState4","setalert","message","setTimeout","document","body","components_TextForm","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.17332e1e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                {/* <Link className=\"navbar-brand\" to=\"/\">TxtAnalyzer</Link> */}\r\n                <a className=\"navbar-brand\" href=\"/\">TxtAnalyzer</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse justify-content-between\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link active\" to = \"/\" > Home</Link> */}\r\n                            <a className=\"nav-link active\" /*aria-current=\"page\"*/ href=\"/\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link\" to=\"/about\">About</Link> */}\r\n                            {/* <a className=\"nav-link\" href=\"/about\">About</a> */}\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"form-check form-switch\">\r\n                        <label className={`form-check-label text-${props.mode === 'light' ? 'dark' : 'light'}`} htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav >\r\n    )\r\n}\r\n\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n    aboutText: 'About'\r\n}","import React from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst TextForm = (props) => {\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"onchange\");\r\n        setText(event.target.value)\r\n\r\n    }\r\n    const [text, setText] = useState('');\r\n    // const TextForm = () => {\r\n    const handleUpClick = () => {\r\n        // console.log(\"uppercase was clicked: \" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n    const handleLoClick = () => {\r\n        // console.log(\"uppercase was clicked: \" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n    const handleClearClick = () => {\r\n        // console.log(\"uppercase was clicked: \" + text);\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n    }\r\n    const handleSpeech = () => {\r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.text = text;\r\n        window.speechSynthesis.speak(msg);\r\n        props.showAlert(\"You can listen to the message now!\", \"success\");\r\n    }\r\n    const handleUndoClick = () => {\r\n        let newText = text.substr(0, text.length - 1);\r\n        setText(newText)\r\n        props.showAlert(\"You can undo the message!\", \"success\");\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='container' style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? '#0d183d' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary me-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary me-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary me-2\" onClick={handleClearClick}>Clear Text</button>\r\n                <button className=\"btn btn-primary me-2\" onClick={handleSpeech}>Listen to Text</button>\r\n                <button className=\"btn btn-primary me-2\" onClick={handleUndoClick}>Undo Text</button>\r\n\r\n            </div>\r\n            <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h2>Your text here</h2>\r\n                <strong>\r\n                    {/* <p className='mb-0'>{text.split(\" \").length} words and {text.length} characters</p> */}\r\n                    <p className='mb-0'>{text.split(' ').filter(function (n) { return n !== '' }).length} words and {text.length} characters</p>\r\n                </strong>\r\n                <strong>\r\n                    <p>{0.008 * text.split(\" \").length} minutes read</p>\r\n                </strong>\r\n                <h2>Preview</h2>\r\n                <p>{text.length > 0 ? text : \"Enter something in textbox above to preview it here\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default TextForm;","import React from 'react';\r\n\r\nexport default function Alert(props) {\r\n    // const capitalize = (word) => {\r\n    //     const lower = word.toLowerCase();\r\n    //     const lower = toUpperCase(0) + lower.slice(1);\r\n    // }\r\n\r\n    const capitalize = (word) => {\r\n        return word.charAt(0).toUpperCase() + word.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            {/* <strong>{props.alert.type}</strong>: {props.alert.msg} */}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import ReactDOM from \"react-dom/client\"\n// import { BrowserRouter, Routes, Route, useRoutes } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#0d183d';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n      // setInterval(() => {\n      //   document.title = \"TextUtils is Amazing mode\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install TextUtils Now!\";\n      // }, 1500);\n    }\n    else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  }\n\n  const [alert, setalert] = useState(null);\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  }\n\n  // const appRoute = () => {\n  //   let routes = useRoutes([\n  //     { path: \"/\", element: <TextForm /> },\n  //     { path: \"/about\", element: <About /> },\n\n  //   ]);\n  //   return routes;\n  // }\n\n  return (\n    <>\n      {/* <BrowserRouter> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Routes appRoute={appRoute}> */}\n        {/* <Route path=\"/about\" element={<About />} /> */}\n        {/* <About />\n            </Route> */}\n        {/* <Route path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} />} /> */}\n        <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} />\n        {/* </Route> */}\n        {/* </Routes> */}\n      </div>\n      {/* </BrowserRouter> */}\n      {/* <About /> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}